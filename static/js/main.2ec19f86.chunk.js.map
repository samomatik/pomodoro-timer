{"version":3,"sources":["js/Timer.js","App.js","serviceWorker.js","index.js"],"names":["Timer","react_default","a","createElement","className","id","class","this","props","breakLength","sessionLength","sessionType","timeRemaining","onClick","handleClick","handleTimer","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clockify","time","minutes","Math","floor","seconds","setState","concat","startTimer","timerOn","state","timer","runningTimer","setInterval","timerId","audioBeep","play","clearInterval","stopTimer","resetTimer","pause","currentTime","bind","assertThisInitialized","updateTimer","event","target","_this2","js_Timer","timerTime","preload","src","ref","audio","dist_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ec19f86.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Timer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"timer\">\r\n                    <div>\r\n                        <p id=\"break-label\">Break Length</p>\r\n                        <p id=\"break-length\" class=\"strong\">{this.props.breakLength}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p id=\"session-label\">Session Length</p>\r\n                        <p id=\"session-length\" class=\"strong\">{this.props.sessionLength}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"clock\">\r\n                    <p id=\"timer-label\">{this.props.sessionType}</p>\r\n                    <p id=\"time-left\">{this.props.timeRemaining}</p>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                    <div className=\"break-controls\">\r\n                        <button onClick={this.props.handleClick}><i id=\"break-increment\" className=\"fa fa-arrow-circle-o-up\"></i></button>\r\n                        <p>Break</p>\r\n                        <button onClick={this.props.handleClick}><i id=\"break-decrement\" className=\"fa fa-arrow-circle-o-down\"></i></button>\r\n                    </div>\r\n                    <div className=\"timer-controls\">\r\n                        <button onClick={this.props.handleTimer}><i id=\"start_stop\" className=\"fa fa-play-circle-o\"></i></button>\r\n                        <button onClick={this.props.handleTimer}><i id=\"reset\" className=\"fa fa-repeat\"></i></button>\r\n                    </div>\r\n                    <div className=\"session-controls\">\r\n                        <button onClick={this.props.handleClick}><i id=\"session-increment\" className=\"fa fa-arrow-circle-o-up\"></i></button>\r\n                        <p>Session</p>\r\n                        <button onClick={this.props.handleClick}><i id=\"session-decrement\" className=\"fa fa-arrow-circle-o-down\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\nimport './App.css';\nimport Timer from './js/Timer.js';\nimport ReactFCCtest from 'react-fcctest';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      sessionType: 'Work',\n      timeRemaining: '00:00',\n      timerId: '',\n      timerOn: false,\n      timer: 0\n    }\n\n    this.updateTimer = this.updateTimer.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTimer = this.handleTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.clockify = this.clockify.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateTimer();\n  }\n\n  updateTimer() {\n    this.setState({\n      timer: this.state.sessionLength * 60\n    }, function stateUpdateComplete() {\n      this.clockify(this.state.timer)\n    }.bind(this));\n  }\n\n  handleClick(event) {\n    if (!this.state.timerOn) {\n      switch (event.target.id) {\n        case 'break-decrement':\n          this.setState(state => ({\n            breakLength: state.breakLength <= 1 ? state.breakLength : state.breakLength - 1\n          }));\n          break;\n        case 'break-increment':\n          this.setState(state => ({\n            breakLength: state.breakLength >= 60 ? state.breakLength : state.breakLength + 1\n          }));\n          break;\n        case 'session-decrement':\n          this.setState(state => ({\n            sessionLength: state.sessionLength <= 1 ? state.sessionLength : state.sessionLength - 1\n          }), function stateUpdateComplete() {\n            this.updateTimer();\n          }.bind(this));\n          break;\n        case 'session-increment':\n          return this.setState(state => ({\n            sessionLength: state.sessionLength >= 60 ? state.sessionLength : state.sessionLength + 1\n          }), function stateUpdateComplete() {\n            this.updateTimer();\n          }.bind(this));\n        default:\n          return;\n      }\n    }\n  }\n\n  handleTimer(event) {\n    if (event.target.id === 'start_stop' && !this.state.timerOn) {\n      this.startTimer();\n    }\n    else if (event.target.id === 'start_stop' && this.state.timerOn) {\n      this.stopTimer();\n    }\n    else if (event.target.id === 'reset') {\n      this.resetTimer();\n    }\n  }\n\n  clockify = (time) => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    this.setState({\n      timeRemaining: `${minutes}:${seconds}`\n    });\n  }\n\n  startTimer = () => {\n    \n    this.setState({\n      timerOn: true,\n    });\n    let time = this.state.timer;\n    \n    time = time - 1;\n    let runningTimer = setInterval(() => {\n      this.clockify(time);\n      this.setState({\n        timerId: runningTimer\n      })\n      \n      if (time <= 0) {\n        this.audioBeep.play();\n        if (this.state.sessionType === \"Work\") {\n          this.setState(state => ({\n            sessionType: \"Break\",\n            timerOn: false,\n            timer: state.breakLength * 60 + 1\n          }));\n          clearInterval(this.state.timerId);\n          this.startTimer();\n        } else {\n          this.setState(state => ({\n            sessionType: \"Work\",\n            timerOn: false,\n            timer: state.sessionLength * 60 + 1\n          }));\n          clearInterval(this.state.timerId);\n          this.startTimer();\n        }\n      }\n      time = time - 1;\n      this.setState({\n        timer: time\n      })\n    }, 1000);\n  }\n\n  stopTimer = () => {\n    clearInterval(this.state.timerId);\n    this.setState({ timerOn: false });\n  };\n\n  resetTimer = () => {\n    this.stopTimer();\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n    this.setState({\n      sessionLength: 25,\n      breakLength: 5,\n      sessionType: \"Work\",\n      timerId: 0,\n      timer: 1500\n    }, function stateUpdateComplete() {\n      this.clockify(this.state.timer)\n    }.bind(this));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Pomodoro Timer</h1>\n        <Timer\n          breakLength={this.state.breakLength}\n          sessionLength={this.state.sessionLength}\n          sessionType={this.state.sessionType}\n          timeRemaining={this.state.timeRemaining}\n          timerTime={this.state.timerTime}\n          handleClick={this.handleClick}\n          handleTimer={this.handleTimer}\n        />\n        <audio id=\"beep\" preload=\"auto\"\n          src=\"https://goo.gl/65cBl1\"\n          ref={(audio) => { this.audioBeep = audio; }} />\n        <ReactFCCtest />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}